{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2d59fcdc",
   "metadata": {},
   "source": [
    "# WORLD HAPPINESS REPORT"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b99314d7",
   "metadata": {},
   "source": [
    "Context\n",
    "\n",
    "The World Happiness Report is a landmark survey of the state of global happiness. The first report was published in 2012, the second in 2013, the third in 2015, and the fourth in the 2016 Update. The World Happiness 2017, which ranks 155 countries by their happiness levels, was released at the United Nations at an event celebrating International Day of Happiness on March 20th. The report continues to gain global recognition as governments, organizations and civil society increasingly use happiness indicators to inform their policy-making decisions. Leading experts across fields – economics, psychology, survey analysis, national statistics, health, public policy and more – describe how measurements of well-being can be used effectively to assess the progress of nations. The reports review the state of happiness in the world today and show how the new science of happiness explains personal and national variations in happiness.\n",
    "\n",
    "What is Dystopia?\n",
    "\n",
    "Dystopia is an imaginary country that has the world’s least-happy people. The purpose in establishing Dystopia is to have a benchmark against which all countries can be favorably compared (no country performs more poorly than Dystopia) in terms of each of the six key variables, thus allowing each sub-bar to be of positive width. The lowest scores observed for the six key variables, therefore, characterize Dystopia. Since life would be very unpleasant in a country with the world’s lowest incomes, lowest life expectancy, lowest generosity, most corruption, least freedom and least social support, it is referred to as “Dystopia,” in contrast to Utopia.\n",
    "\n",
    "What are the residuals?\n",
    "\n",
    "The residuals, or unexplained components, differ for each country, reflecting the extent to which the six variables either over- or under-explain average life evaluations. These residuals have an average value of approximately zero over the whole set of countries. \n",
    "\n",
    "What do the columns succeeding the Happiness Score(like Family, Generosity, etc.) describe?\n",
    "\n",
    "The following columns: GDP per Capita, Family, Life Expectancy, Freedom, Generosity, Trust Government Corruption describe the extent to which these factors contribute in evaluating the happiness in each country. \n",
    "The Dystopia Residual metric actually is the Dystopia Happiness Score(1.85) + the Residual value or the unexplained value for each country.\n",
    "\n",
    "The Dystopia Residual is already provided in the dataset. \n",
    "\n",
    "If you add all these factors up, you get the happiness score so it might be un-reliable to model them to predict Happiness Scores.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc17fb08",
   "metadata": {},
   "source": [
    "Problem Statement:\n",
    "You need to predict the happiness score considering all the other factors mentioned in the dataset. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67c2326e",
   "metadata": {},
   "source": [
    "As we have to predict the happiness score (target attribute) from the dataset, we will use the REGRESSION APPROACH."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2e77b7eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ca37eed1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>0.03553</td>\n",
       "      <td>1.32629</td>\n",
       "      <td>1.32261</td>\n",
       "      <td>0.90563</td>\n",
       "      <td>0.63297</td>\n",
       "      <td>0.32957</td>\n",
       "      <td>0.45811</td>\n",
       "      <td>2.45176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>Rwanda</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>154</td>\n",
       "      <td>3.465</td>\n",
       "      <td>0.03464</td>\n",
       "      <td>0.22208</td>\n",
       "      <td>0.77370</td>\n",
       "      <td>0.42864</td>\n",
       "      <td>0.59201</td>\n",
       "      <td>0.55191</td>\n",
       "      <td>0.22628</td>\n",
       "      <td>0.67042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>Benin</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>155</td>\n",
       "      <td>3.340</td>\n",
       "      <td>0.03656</td>\n",
       "      <td>0.28665</td>\n",
       "      <td>0.35386</td>\n",
       "      <td>0.31910</td>\n",
       "      <td>0.48450</td>\n",
       "      <td>0.08010</td>\n",
       "      <td>0.18260</td>\n",
       "      <td>1.63328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>Syria</td>\n",
       "      <td>Middle East and Northern Africa</td>\n",
       "      <td>156</td>\n",
       "      <td>3.006</td>\n",
       "      <td>0.05015</td>\n",
       "      <td>0.66320</td>\n",
       "      <td>0.47489</td>\n",
       "      <td>0.72193</td>\n",
       "      <td>0.15684</td>\n",
       "      <td>0.18906</td>\n",
       "      <td>0.47179</td>\n",
       "      <td>0.32858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>Burundi</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>157</td>\n",
       "      <td>2.905</td>\n",
       "      <td>0.08658</td>\n",
       "      <td>0.01530</td>\n",
       "      <td>0.41587</td>\n",
       "      <td>0.22396</td>\n",
       "      <td>0.11850</td>\n",
       "      <td>0.10062</td>\n",
       "      <td>0.19727</td>\n",
       "      <td>1.83302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>Togo</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>158</td>\n",
       "      <td>2.839</td>\n",
       "      <td>0.06727</td>\n",
       "      <td>0.20868</td>\n",
       "      <td>0.13995</td>\n",
       "      <td>0.28443</td>\n",
       "      <td>0.36453</td>\n",
       "      <td>0.10731</td>\n",
       "      <td>0.16681</td>\n",
       "      <td>1.56726</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Country                           Region  Happiness Rank  \\\n",
       "0    Switzerland                   Western Europe               1   \n",
       "1        Iceland                   Western Europe               2   \n",
       "2        Denmark                   Western Europe               3   \n",
       "3         Norway                   Western Europe               4   \n",
       "4         Canada                    North America               5   \n",
       "..           ...                              ...             ...   \n",
       "153       Rwanda               Sub-Saharan Africa             154   \n",
       "154        Benin               Sub-Saharan Africa             155   \n",
       "155        Syria  Middle East and Northern Africa             156   \n",
       "156      Burundi               Sub-Saharan Africa             157   \n",
       "157         Togo               Sub-Saharan Africa             158   \n",
       "\n",
       "     Happiness Score  Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "0              7.587         0.03411                   1.39651  1.34951   \n",
       "1              7.561         0.04884                   1.30232  1.40223   \n",
       "2              7.527         0.03328                   1.32548  1.36058   \n",
       "3              7.522         0.03880                   1.45900  1.33095   \n",
       "4              7.427         0.03553                   1.32629  1.32261   \n",
       "..               ...             ...                       ...      ...   \n",
       "153            3.465         0.03464                   0.22208  0.77370   \n",
       "154            3.340         0.03656                   0.28665  0.35386   \n",
       "155            3.006         0.05015                   0.66320  0.47489   \n",
       "156            2.905         0.08658                   0.01530  0.41587   \n",
       "157            2.839         0.06727                   0.20868  0.13995   \n",
       "\n",
       "     Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "0                     0.94143  0.66557                        0.41978   \n",
       "1                     0.94784  0.62877                        0.14145   \n",
       "2                     0.87464  0.64938                        0.48357   \n",
       "3                     0.88521  0.66973                        0.36503   \n",
       "4                     0.90563  0.63297                        0.32957   \n",
       "..                        ...      ...                            ...   \n",
       "153                   0.42864  0.59201                        0.55191   \n",
       "154                   0.31910  0.48450                        0.08010   \n",
       "155                   0.72193  0.15684                        0.18906   \n",
       "156                   0.22396  0.11850                        0.10062   \n",
       "157                   0.28443  0.36453                        0.10731   \n",
       "\n",
       "     Generosity  Dystopia Residual  \n",
       "0       0.29678            2.51738  \n",
       "1       0.43630            2.70201  \n",
       "2       0.34139            2.49204  \n",
       "3       0.34699            2.46531  \n",
       "4       0.45811            2.45176  \n",
       "..          ...                ...  \n",
       "153     0.22628            0.67042  \n",
       "154     0.18260            1.63328  \n",
       "155     0.47179            0.32858  \n",
       "156     0.19727            1.83302  \n",
       "157     0.16681            1.56726  \n",
       "\n",
       "[158 rows x 12 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv('happiness_score_dataset.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c8056cb",
   "metadata": {},
   "source": [
    "Checking the datatypes of the columns-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3185b298",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country                           object\n",
       "Region                            object\n",
       "Happiness Rank                     int64\n",
       "Happiness Score                  float64\n",
       "Standard Error                   float64\n",
       "Economy (GDP per Capita)         float64\n",
       "Family                           float64\n",
       "Health (Life Expectancy)         float64\n",
       "Freedom                          float64\n",
       "Trust (Government Corruption)    float64\n",
       "Generosity                       float64\n",
       "Dystopia Residual                float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "79a37802",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Country', 'Region', 'Happiness Rank', 'Happiness Score',\n",
       "       'Standard Error', 'Economy (GDP per Capita)', 'Family',\n",
       "       'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)',\n",
       "       'Generosity', 'Dystopia Residual'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c48d1d30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Norway</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>0.03553</td>\n",
       "      <td>1.32629</td>\n",
       "      <td>1.32261</td>\n",
       "      <td>0.90563</td>\n",
       "      <td>0.63297</td>\n",
       "      <td>0.32957</td>\n",
       "      <td>0.45811</td>\n",
       "      <td>2.45176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Finland</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>6</td>\n",
       "      <td>7.406</td>\n",
       "      <td>0.03140</td>\n",
       "      <td>1.29025</td>\n",
       "      <td>1.31826</td>\n",
       "      <td>0.88911</td>\n",
       "      <td>0.64169</td>\n",
       "      <td>0.41372</td>\n",
       "      <td>0.23351</td>\n",
       "      <td>2.61955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>7</td>\n",
       "      <td>7.378</td>\n",
       "      <td>0.02799</td>\n",
       "      <td>1.32944</td>\n",
       "      <td>1.28017</td>\n",
       "      <td>0.89284</td>\n",
       "      <td>0.61576</td>\n",
       "      <td>0.31814</td>\n",
       "      <td>0.47610</td>\n",
       "      <td>2.46570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>Western Europe</td>\n",
       "      <td>8</td>\n",
       "      <td>7.364</td>\n",
       "      <td>0.03157</td>\n",
       "      <td>1.33171</td>\n",
       "      <td>1.28907</td>\n",
       "      <td>0.91087</td>\n",
       "      <td>0.65980</td>\n",
       "      <td>0.43844</td>\n",
       "      <td>0.36262</td>\n",
       "      <td>2.37119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>Australia and New Zealand</td>\n",
       "      <td>9</td>\n",
       "      <td>7.286</td>\n",
       "      <td>0.03371</td>\n",
       "      <td>1.25018</td>\n",
       "      <td>1.31967</td>\n",
       "      <td>0.90837</td>\n",
       "      <td>0.63938</td>\n",
       "      <td>0.42922</td>\n",
       "      <td>0.47501</td>\n",
       "      <td>2.26425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Australia</td>\n",
       "      <td>Australia and New Zealand</td>\n",
       "      <td>10</td>\n",
       "      <td>7.284</td>\n",
       "      <td>0.04083</td>\n",
       "      <td>1.33358</td>\n",
       "      <td>1.30923</td>\n",
       "      <td>0.93156</td>\n",
       "      <td>0.65124</td>\n",
       "      <td>0.35637</td>\n",
       "      <td>0.43562</td>\n",
       "      <td>2.26646</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country                     Region  Happiness Rank  Happiness Score  \\\n",
       "0  Switzerland             Western Europe               1            7.587   \n",
       "1      Iceland             Western Europe               2            7.561   \n",
       "2      Denmark             Western Europe               3            7.527   \n",
       "3       Norway             Western Europe               4            7.522   \n",
       "4       Canada              North America               5            7.427   \n",
       "5      Finland             Western Europe               6            7.406   \n",
       "6  Netherlands             Western Europe               7            7.378   \n",
       "7       Sweden             Western Europe               8            7.364   \n",
       "8  New Zealand  Australia and New Zealand               9            7.286   \n",
       "9    Australia  Australia and New Zealand              10            7.284   \n",
       "\n",
       "   Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "0         0.03411                   1.39651  1.34951   \n",
       "1         0.04884                   1.30232  1.40223   \n",
       "2         0.03328                   1.32548  1.36058   \n",
       "3         0.03880                   1.45900  1.33095   \n",
       "4         0.03553                   1.32629  1.32261   \n",
       "5         0.03140                   1.29025  1.31826   \n",
       "6         0.02799                   1.32944  1.28017   \n",
       "7         0.03157                   1.33171  1.28907   \n",
       "8         0.03371                   1.25018  1.31967   \n",
       "9         0.04083                   1.33358  1.30923   \n",
       "\n",
       "   Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "0                   0.94143  0.66557                        0.41978   \n",
       "1                   0.94784  0.62877                        0.14145   \n",
       "2                   0.87464  0.64938                        0.48357   \n",
       "3                   0.88521  0.66973                        0.36503   \n",
       "4                   0.90563  0.63297                        0.32957   \n",
       "5                   0.88911  0.64169                        0.41372   \n",
       "6                   0.89284  0.61576                        0.31814   \n",
       "7                   0.91087  0.65980                        0.43844   \n",
       "8                   0.90837  0.63938                        0.42922   \n",
       "9                   0.93156  0.65124                        0.35637   \n",
       "\n",
       "   Generosity  Dystopia Residual  \n",
       "0     0.29678            2.51738  \n",
       "1     0.43630            2.70201  \n",
       "2     0.34139            2.49204  \n",
       "3     0.34699            2.46531  \n",
       "4     0.45811            2.45176  \n",
       "5     0.23351            2.61955  \n",
       "6     0.47610            2.46570  \n",
       "7     0.36262            2.37119  \n",
       "8     0.47501            2.26425  \n",
       "9     0.43562            2.26646  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "232283a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>Chad</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>149</td>\n",
       "      <td>3.667</td>\n",
       "      <td>0.03830</td>\n",
       "      <td>0.34193</td>\n",
       "      <td>0.76062</td>\n",
       "      <td>0.15010</td>\n",
       "      <td>0.23501</td>\n",
       "      <td>0.05269</td>\n",
       "      <td>0.18386</td>\n",
       "      <td>1.94296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>Guinea</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>150</td>\n",
       "      <td>3.656</td>\n",
       "      <td>0.03590</td>\n",
       "      <td>0.17417</td>\n",
       "      <td>0.46475</td>\n",
       "      <td>0.24009</td>\n",
       "      <td>0.37725</td>\n",
       "      <td>0.12139</td>\n",
       "      <td>0.28657</td>\n",
       "      <td>1.99172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>Ivory Coast</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>151</td>\n",
       "      <td>3.655</td>\n",
       "      <td>0.05141</td>\n",
       "      <td>0.46534</td>\n",
       "      <td>0.77115</td>\n",
       "      <td>0.15185</td>\n",
       "      <td>0.46866</td>\n",
       "      <td>0.17922</td>\n",
       "      <td>0.20165</td>\n",
       "      <td>1.41723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>Burkina Faso</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>152</td>\n",
       "      <td>3.587</td>\n",
       "      <td>0.04324</td>\n",
       "      <td>0.25812</td>\n",
       "      <td>0.85188</td>\n",
       "      <td>0.27125</td>\n",
       "      <td>0.39493</td>\n",
       "      <td>0.12832</td>\n",
       "      <td>0.21747</td>\n",
       "      <td>1.46494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Southern Asia</td>\n",
       "      <td>153</td>\n",
       "      <td>3.575</td>\n",
       "      <td>0.03084</td>\n",
       "      <td>0.31982</td>\n",
       "      <td>0.30285</td>\n",
       "      <td>0.30335</td>\n",
       "      <td>0.23414</td>\n",
       "      <td>0.09719</td>\n",
       "      <td>0.36510</td>\n",
       "      <td>1.95210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>Rwanda</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>154</td>\n",
       "      <td>3.465</td>\n",
       "      <td>0.03464</td>\n",
       "      <td>0.22208</td>\n",
       "      <td>0.77370</td>\n",
       "      <td>0.42864</td>\n",
       "      <td>0.59201</td>\n",
       "      <td>0.55191</td>\n",
       "      <td>0.22628</td>\n",
       "      <td>0.67042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>Benin</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>155</td>\n",
       "      <td>3.340</td>\n",
       "      <td>0.03656</td>\n",
       "      <td>0.28665</td>\n",
       "      <td>0.35386</td>\n",
       "      <td>0.31910</td>\n",
       "      <td>0.48450</td>\n",
       "      <td>0.08010</td>\n",
       "      <td>0.18260</td>\n",
       "      <td>1.63328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>Syria</td>\n",
       "      <td>Middle East and Northern Africa</td>\n",
       "      <td>156</td>\n",
       "      <td>3.006</td>\n",
       "      <td>0.05015</td>\n",
       "      <td>0.66320</td>\n",
       "      <td>0.47489</td>\n",
       "      <td>0.72193</td>\n",
       "      <td>0.15684</td>\n",
       "      <td>0.18906</td>\n",
       "      <td>0.47179</td>\n",
       "      <td>0.32858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>Burundi</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>157</td>\n",
       "      <td>2.905</td>\n",
       "      <td>0.08658</td>\n",
       "      <td>0.01530</td>\n",
       "      <td>0.41587</td>\n",
       "      <td>0.22396</td>\n",
       "      <td>0.11850</td>\n",
       "      <td>0.10062</td>\n",
       "      <td>0.19727</td>\n",
       "      <td>1.83302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>Togo</td>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "      <td>158</td>\n",
       "      <td>2.839</td>\n",
       "      <td>0.06727</td>\n",
       "      <td>0.20868</td>\n",
       "      <td>0.13995</td>\n",
       "      <td>0.28443</td>\n",
       "      <td>0.36453</td>\n",
       "      <td>0.10731</td>\n",
       "      <td>0.16681</td>\n",
       "      <td>1.56726</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Country                           Region  Happiness Rank  \\\n",
       "148          Chad               Sub-Saharan Africa             149   \n",
       "149        Guinea               Sub-Saharan Africa             150   \n",
       "150   Ivory Coast               Sub-Saharan Africa             151   \n",
       "151  Burkina Faso               Sub-Saharan Africa             152   \n",
       "152   Afghanistan                    Southern Asia             153   \n",
       "153        Rwanda               Sub-Saharan Africa             154   \n",
       "154         Benin               Sub-Saharan Africa             155   \n",
       "155         Syria  Middle East and Northern Africa             156   \n",
       "156       Burundi               Sub-Saharan Africa             157   \n",
       "157          Togo               Sub-Saharan Africa             158   \n",
       "\n",
       "     Happiness Score  Standard Error  Economy (GDP per Capita)   Family  \\\n",
       "148            3.667         0.03830                   0.34193  0.76062   \n",
       "149            3.656         0.03590                   0.17417  0.46475   \n",
       "150            3.655         0.05141                   0.46534  0.77115   \n",
       "151            3.587         0.04324                   0.25812  0.85188   \n",
       "152            3.575         0.03084                   0.31982  0.30285   \n",
       "153            3.465         0.03464                   0.22208  0.77370   \n",
       "154            3.340         0.03656                   0.28665  0.35386   \n",
       "155            3.006         0.05015                   0.66320  0.47489   \n",
       "156            2.905         0.08658                   0.01530  0.41587   \n",
       "157            2.839         0.06727                   0.20868  0.13995   \n",
       "\n",
       "     Health (Life Expectancy)  Freedom  Trust (Government Corruption)  \\\n",
       "148                   0.15010  0.23501                        0.05269   \n",
       "149                   0.24009  0.37725                        0.12139   \n",
       "150                   0.15185  0.46866                        0.17922   \n",
       "151                   0.27125  0.39493                        0.12832   \n",
       "152                   0.30335  0.23414                        0.09719   \n",
       "153                   0.42864  0.59201                        0.55191   \n",
       "154                   0.31910  0.48450                        0.08010   \n",
       "155                   0.72193  0.15684                        0.18906   \n",
       "156                   0.22396  0.11850                        0.10062   \n",
       "157                   0.28443  0.36453                        0.10731   \n",
       "\n",
       "     Generosity  Dystopia Residual  \n",
       "148     0.18386            1.94296  \n",
       "149     0.28657            1.99172  \n",
       "150     0.20165            1.41723  \n",
       "151     0.21747            1.46494  \n",
       "152     0.36510            1.95210  \n",
       "153     0.22628            0.67042  \n",
       "154     0.18260            1.63328  \n",
       "155     0.47179            0.32858  \n",
       "156     0.19727            1.83302  \n",
       "157     0.16681            1.56726  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "445d1e69",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(158, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdb4fb8a",
   "metadata": {},
   "source": [
    "Checking null values in the dataframe-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "54a9a7f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country                          0\n",
       "Region                           0\n",
       "Happiness Rank                   0\n",
       "Happiness Score                  0\n",
       "Standard Error                   0\n",
       "Economy (GDP per Capita)         0\n",
       "Family                           0\n",
       "Health (Life Expectancy)         0\n",
       "Freedom                          0\n",
       "Trust (Government Corruption)    0\n",
       "Generosity                       0\n",
       "Dystopia Residual                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "aa1a7dbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([7.587, 7.561, 7.527, 7.522, 7.427, 7.406, 7.378, 7.364, 7.286,\n",
       "       7.284, 7.278, 7.226, 7.2  , 7.187, 7.119, 6.983, 6.946, 6.94 ,\n",
       "       6.937, 6.901, 6.867, 6.853, 6.81 , 6.798, 6.786, 6.75 , 6.67 ,\n",
       "       6.611, 6.575, 6.574, 6.505, 6.485, 6.477, 6.455, 6.411, 6.329,\n",
       "       6.302, 6.298, 6.295, 6.269, 6.168, 6.13 , 6.123, 6.003, 5.995,\n",
       "       5.987, 5.984, 5.975, 5.96 , 5.948, 5.89 , 5.889, 5.878, 5.855,\n",
       "       5.848, 5.833, 5.828, 5.824, 5.813, 5.791, 5.77 , 5.759, 5.754,\n",
       "       5.716, 5.709, 5.695, 5.689, 5.605, 5.589, 5.548, 5.477, 5.474,\n",
       "       5.429, 5.399, 5.36 , 5.332, 5.286, 5.268, 5.253, 5.212, 5.194,\n",
       "       5.192, 5.14 , 5.129, 5.124, 5.123, 5.102, 5.098, 5.073, 5.057,\n",
       "       5.013, 5.007, 4.971, 4.959, 4.949, 4.898, 4.885, 4.876, 4.874,\n",
       "       4.867, 4.857, 4.839, 4.8  , 4.788, 4.786, 4.739, 4.715, 4.694,\n",
       "       4.686, 4.681, 4.677, 4.642, 4.633, 4.61 , 4.571, 4.565, 4.55 ,\n",
       "       4.518, 4.517, 4.514, 4.512, 4.507, 4.436, 4.419, 4.369, 4.35 ,\n",
       "       4.332, 4.307, 4.297, 4.292, 4.271, 4.252, 4.218, 4.194, 4.077,\n",
       "       4.033, 3.995, 3.989, 3.956, 3.931, 3.904, 3.896, 3.845, 3.819,\n",
       "       3.781, 3.681, 3.678, 3.667, 3.656, 3.655, 3.587, 3.575, 3.465,\n",
       "       3.34 , 3.006, 2.905, 2.839])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Happiness Score'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e7c7817b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "157"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Happiness Score'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "573404f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Country, Region, Happiness Rank, Happiness Score, Standard Error, Economy (GDP per Capita), Family, Health (Life Expectancy), Freedom, Trust (Government Corruption), Generosity, Dystopia Residual]\n",
       "Index: []"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[df['Happiness Score']==' ']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6af91cf",
   "metadata": {},
   "source": [
    "We see that there are no blank spaces in the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5876c05",
   "metadata": {},
   "source": [
    "Making dataframe for the nominal data-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a08c05e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Western Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Western Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Western Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Western Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>North America</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>Middle East and Northern Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>Sub-Saharan Africa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Region\n",
       "0                     Western Europe\n",
       "1                     Western Europe\n",
       "2                     Western Europe\n",
       "3                     Western Europe\n",
       "4                      North America\n",
       "..                               ...\n",
       "153               Sub-Saharan Africa\n",
       "154               Sub-Saharan Africa\n",
       "155  Middle East and Northern Africa\n",
       "156               Sub-Saharan Africa\n",
       "157               Sub-Saharan Africa\n",
       "\n",
       "[158 rows x 1 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_visualization_nominal=df[['Region']].copy()\n",
    "df_visualization_nominal"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f8ec83e",
   "metadata": {},
   "source": [
    "Visualization of data-"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "214fac56",
   "metadata": {},
   "source": [
    "For the nominal categorical data we will use countplot as it will give the frequency of the classes of the columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1f8aba2e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8b52dcdc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sub-Saharan Africa                 40\n",
      "Central and Eastern Europe         29\n",
      "Latin America and Caribbean        22\n",
      "Western Europe                     21\n",
      "Middle East and Northern Africa    20\n",
      "Southeastern Asia                   9\n",
      "Southern Asia                       7\n",
      "Eastern Asia                        6\n",
      "North America                       2\n",
      "Australia and New Zealand           2\n",
      "Name: Region, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax=sns.countplot(x='Region',data=df_visualization_nominal)\n",
    "print(df_visualization_nominal['Region'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3680980b",
   "metadata": {},
   "source": [
    "For the ordinal categorical data we will use lineplot as it will give us the flow of the line of the classes of the columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0b759148",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Happiness Rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>158</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Happiness Rank\n",
       "0                 1\n",
       "1                 2\n",
       "2                 3\n",
       "3                 4\n",
       "4                 5\n",
       "..              ...\n",
       "153             154\n",
       "154             155\n",
       "155             156\n",
       "156             157\n",
       "157             158\n",
       "\n",
       "[158 rows x 1 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_visualization_ordinal=df[['Happiness Rank']].copy()\n",
    "df_visualization_ordinal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7fa8584f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1215cc220>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x='Region',y='Happiness Rank',data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bb0f381",
   "metadata": {},
   "source": [
    "For the continuous categorical data we will use distplot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "885f5dce",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_visualization_conitnuous=df[['Happiness Score','Standard Error','Economy (GDP per Capita)','Family','Health (Life Expectancy)','Freedom','Trust (Government Corruption)','Generosity','Dystopia Residual']].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0a665e41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x12161cf40>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Happiness Score'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7b4b68fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1217bc040>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Standard Error'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2d071b65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x121f61eb0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Economy (GDP per Capita)'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ac81ff52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x122092580>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Family'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "47b39db7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x12221a730>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Health (Life Expectancy)'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d7844e11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x122224e80>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Freedom'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "80dd1fe0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1223da5e0>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Trust (Government Corruption)'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e65bac02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x122841af0>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Generosity'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f6c210aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1228f19a0>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(df_visualization_conitnuous['Dystopia Residual'],kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52381492",
   "metadata": {},
   "source": [
    "Encoding of Dataframe-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9c80c821",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import OrdinalEncoder\n",
    "enc=OrdinalEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "2d739ec9",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in df.columns:\n",
    "    if df[i].dtypes=='object':\n",
    "        df[i]=enc.fit_transform(df[i].values.reshape(-1,1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b5f140a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>58.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>105.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>0.03553</td>\n",
       "      <td>1.32629</td>\n",
       "      <td>1.32261</td>\n",
       "      <td>0.90563</td>\n",
       "      <td>0.63297</td>\n",
       "      <td>0.32957</td>\n",
       "      <td>0.45811</td>\n",
       "      <td>2.45176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>118.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>154</td>\n",
       "      <td>3.465</td>\n",
       "      <td>0.03464</td>\n",
       "      <td>0.22208</td>\n",
       "      <td>0.77370</td>\n",
       "      <td>0.42864</td>\n",
       "      <td>0.59201</td>\n",
       "      <td>0.55191</td>\n",
       "      <td>0.22628</td>\n",
       "      <td>0.67042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>155</td>\n",
       "      <td>3.340</td>\n",
       "      <td>0.03656</td>\n",
       "      <td>0.28665</td>\n",
       "      <td>0.35386</td>\n",
       "      <td>0.31910</td>\n",
       "      <td>0.48450</td>\n",
       "      <td>0.08010</td>\n",
       "      <td>0.18260</td>\n",
       "      <td>1.63328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>136.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>156</td>\n",
       "      <td>3.006</td>\n",
       "      <td>0.05015</td>\n",
       "      <td>0.66320</td>\n",
       "      <td>0.47489</td>\n",
       "      <td>0.72193</td>\n",
       "      <td>0.15684</td>\n",
       "      <td>0.18906</td>\n",
       "      <td>0.47179</td>\n",
       "      <td>0.32858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>21.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>157</td>\n",
       "      <td>2.905</td>\n",
       "      <td>0.08658</td>\n",
       "      <td>0.01530</td>\n",
       "      <td>0.41587</td>\n",
       "      <td>0.22396</td>\n",
       "      <td>0.11850</td>\n",
       "      <td>0.10062</td>\n",
       "      <td>0.19727</td>\n",
       "      <td>1.83302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>141.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>158</td>\n",
       "      <td>2.839</td>\n",
       "      <td>0.06727</td>\n",
       "      <td>0.20868</td>\n",
       "      <td>0.13995</td>\n",
       "      <td>0.28443</td>\n",
       "      <td>0.36453</td>\n",
       "      <td>0.10731</td>\n",
       "      <td>0.16681</td>\n",
       "      <td>1.56726</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Country  Region  Happiness Rank  Happiness Score  Standard Error  \\\n",
       "0      135.0     9.0               1            7.587         0.03411   \n",
       "1       58.0     9.0               2            7.561         0.04884   \n",
       "2       37.0     9.0               3            7.527         0.03328   \n",
       "3      105.0     9.0               4            7.522         0.03880   \n",
       "4       24.0     5.0               5            7.427         0.03553   \n",
       "..       ...     ...             ...              ...             ...   \n",
       "153    118.0     8.0             154            3.465         0.03464   \n",
       "154     13.0     8.0             155            3.340         0.03656   \n",
       "155    136.0     4.0             156            3.006         0.05015   \n",
       "156     21.0     8.0             157            2.905         0.08658   \n",
       "157    141.0     8.0             158            2.839         0.06727   \n",
       "\n",
       "     Economy (GDP per Capita)   Family  Health (Life Expectancy)  Freedom  \\\n",
       "0                     1.39651  1.34951                   0.94143  0.66557   \n",
       "1                     1.30232  1.40223                   0.94784  0.62877   \n",
       "2                     1.32548  1.36058                   0.87464  0.64938   \n",
       "3                     1.45900  1.33095                   0.88521  0.66973   \n",
       "4                     1.32629  1.32261                   0.90563  0.63297   \n",
       "..                        ...      ...                       ...      ...   \n",
       "153                   0.22208  0.77370                   0.42864  0.59201   \n",
       "154                   0.28665  0.35386                   0.31910  0.48450   \n",
       "155                   0.66320  0.47489                   0.72193  0.15684   \n",
       "156                   0.01530  0.41587                   0.22396  0.11850   \n",
       "157                   0.20868  0.13995                   0.28443  0.36453   \n",
       "\n",
       "     Trust (Government Corruption)  Generosity  Dystopia Residual  \n",
       "0                          0.41978     0.29678            2.51738  \n",
       "1                          0.14145     0.43630            2.70201  \n",
       "2                          0.48357     0.34139            2.49204  \n",
       "3                          0.36503     0.34699            2.46531  \n",
       "4                          0.32957     0.45811            2.45176  \n",
       "..                             ...         ...                ...  \n",
       "153                        0.55191     0.22628            0.67042  \n",
       "154                        0.08010     0.18260            1.63328  \n",
       "155                        0.18906     0.47179            0.32858  \n",
       "156                        0.10062     0.19727            1.83302  \n",
       "157                        0.10731     0.16681            1.56726  \n",
       "\n",
       "[158 rows x 12 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a7840e1",
   "metadata": {},
   "source": [
    "Describing the dataset-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f5ddb68a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>158.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>78.500000</td>\n",
       "      <td>5.120253</td>\n",
       "      <td>79.493671</td>\n",
       "      <td>5.375734</td>\n",
       "      <td>0.047885</td>\n",
       "      <td>0.846137</td>\n",
       "      <td>0.991046</td>\n",
       "      <td>0.630259</td>\n",
       "      <td>0.428615</td>\n",
       "      <td>0.143422</td>\n",
       "      <td>0.237296</td>\n",
       "      <td>2.098977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>45.754781</td>\n",
       "      <td>2.993321</td>\n",
       "      <td>45.754363</td>\n",
       "      <td>1.145010</td>\n",
       "      <td>0.017146</td>\n",
       "      <td>0.403121</td>\n",
       "      <td>0.272369</td>\n",
       "      <td>0.247078</td>\n",
       "      <td>0.150693</td>\n",
       "      <td>0.120034</td>\n",
       "      <td>0.126685</td>\n",
       "      <td>0.553550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.839000</td>\n",
       "      <td>0.018480</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.328580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>39.250000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>40.250000</td>\n",
       "      <td>4.526000</td>\n",
       "      <td>0.037268</td>\n",
       "      <td>0.545808</td>\n",
       "      <td>0.856823</td>\n",
       "      <td>0.439185</td>\n",
       "      <td>0.328330</td>\n",
       "      <td>0.061675</td>\n",
       "      <td>0.150553</td>\n",
       "      <td>1.759410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>78.500000</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>79.500000</td>\n",
       "      <td>5.232500</td>\n",
       "      <td>0.043940</td>\n",
       "      <td>0.910245</td>\n",
       "      <td>1.029510</td>\n",
       "      <td>0.696705</td>\n",
       "      <td>0.435515</td>\n",
       "      <td>0.107220</td>\n",
       "      <td>0.216130</td>\n",
       "      <td>2.095415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>117.750000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>118.750000</td>\n",
       "      <td>6.243750</td>\n",
       "      <td>0.052300</td>\n",
       "      <td>1.158448</td>\n",
       "      <td>1.214405</td>\n",
       "      <td>0.811013</td>\n",
       "      <td>0.549092</td>\n",
       "      <td>0.180255</td>\n",
       "      <td>0.309883</td>\n",
       "      <td>2.462415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>157.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>158.000000</td>\n",
       "      <td>7.587000</td>\n",
       "      <td>0.136930</td>\n",
       "      <td>1.690420</td>\n",
       "      <td>1.402230</td>\n",
       "      <td>1.025250</td>\n",
       "      <td>0.669730</td>\n",
       "      <td>0.551910</td>\n",
       "      <td>0.795880</td>\n",
       "      <td>3.602140</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Country      Region  Happiness Rank  Happiness Score  \\\n",
       "count  158.000000  158.000000      158.000000       158.000000   \n",
       "mean    78.500000    5.120253       79.493671         5.375734   \n",
       "std     45.754781    2.993321       45.754363         1.145010   \n",
       "min      0.000000    0.000000        1.000000         2.839000   \n",
       "25%     39.250000    3.000000       40.250000         4.526000   \n",
       "50%     78.500000    4.500000       79.500000         5.232500   \n",
       "75%    117.750000    8.000000      118.750000         6.243750   \n",
       "max    157.000000    9.000000      158.000000         7.587000   \n",
       "\n",
       "       Standard Error  Economy (GDP per Capita)      Family  \\\n",
       "count      158.000000                158.000000  158.000000   \n",
       "mean         0.047885                  0.846137    0.991046   \n",
       "std          0.017146                  0.403121    0.272369   \n",
       "min          0.018480                  0.000000    0.000000   \n",
       "25%          0.037268                  0.545808    0.856823   \n",
       "50%          0.043940                  0.910245    1.029510   \n",
       "75%          0.052300                  1.158448    1.214405   \n",
       "max          0.136930                  1.690420    1.402230   \n",
       "\n",
       "       Health (Life Expectancy)     Freedom  Trust (Government Corruption)  \\\n",
       "count                158.000000  158.000000                     158.000000   \n",
       "mean                   0.630259    0.428615                       0.143422   \n",
       "std                    0.247078    0.150693                       0.120034   \n",
       "min                    0.000000    0.000000                       0.000000   \n",
       "25%                    0.439185    0.328330                       0.061675   \n",
       "50%                    0.696705    0.435515                       0.107220   \n",
       "75%                    0.811013    0.549092                       0.180255   \n",
       "max                    1.025250    0.669730                       0.551910   \n",
       "\n",
       "       Generosity  Dystopia Residual  \n",
       "count  158.000000         158.000000  \n",
       "mean     0.237296           2.098977  \n",
       "std      0.126685           0.553550  \n",
       "min      0.000000           0.328580  \n",
       "25%      0.150553           1.759410  \n",
       "50%      0.216130           2.095415  \n",
       "75%      0.309883           2.462415  \n",
       "max      0.795880           3.602140  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a163b955",
   "metadata": {},
   "source": [
    "Describing the dataset gives us an understanding of various values like count of the attribute,mean of that attribute, standard deviation, minimum, 25th percentile, median/50th percentile, 75th percentile and the maximum value of that attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e04ff73e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1584x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(22,7))\n",
    "sns.heatmap(df.describe(),annot=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcce6a89",
   "metadata": {},
   "source": [
    "Correlation of the columns with the target columns-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1f8f5ecb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Happiness Rank                  -0.992105\n",
       "Standard Error                  -0.177254\n",
       "Region                          -0.176791\n",
       "Country                          0.083380\n",
       "Generosity                       0.180319\n",
       "Trust (Government Corruption)    0.395199\n",
       "Dystopia Residual                0.530474\n",
       "Freedom                          0.568211\n",
       "Health (Life Expectancy)         0.724200\n",
       "Family                           0.740605\n",
       "Economy (GDP per Capita)         0.780966\n",
       "Happiness Score                  1.000000\n",
       "Name: Happiness Score, dtype: float64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()['Happiness Score'].sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d01b1659",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1584x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(22,7))\n",
    "sns.heatmap(df.corr(),annot=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "531c6f65",
   "metadata": {},
   "source": [
    "Checking whether the columns are positively or negatively correlated with the target column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ab3b214e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1584x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(22,7))\n",
    "df.corr()['Happiness Score'].sort_values(ascending=False).drop(['Happiness Score']).plot(kind='bar',color='c')\n",
    "plt.xlabel('Feature',fontsize=14)\n",
    "plt.ylabel('column with target names',fontsize=14)\n",
    "plt.title('correlation',fontsize=14)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "16e40eab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country                          0.000000\n",
       "Region                          -0.116119\n",
       "Happiness Rank                   0.000418\n",
       "Happiness Score                  0.097769\n",
       "Standard Error                   1.983439\n",
       "Economy (GDP per Capita)        -0.317575\n",
       "Family                          -1.006893\n",
       "Health (Life Expectancy)        -0.705328\n",
       "Freedom                         -0.413462\n",
       "Trust (Government Corruption)    1.385463\n",
       "Generosity                       1.001961\n",
       "Dystopia Residual               -0.238911\n",
       "dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.skew()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61cb14e3",
   "metadata": {},
   "source": [
    "Keeping +/-0.5 as the range for skewness, here are the columns which do not lie within the range-\n",
    "1. Standard Error- continuous\n",
    "2. Family- continuous\n",
    "3. Health (Life Expectancy)- continuous\n",
    "4. Trust (Government Corruption)- continuous\n",
    "5. Generosity- continuous"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0d503e7",
   "metadata": {},
   "source": [
    "Since no column has skewness, we will not treat them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "f77ca904",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country                          float64\n",
       "Region                           float64\n",
       "Happiness Rank                     int64\n",
       "Happiness Score                  float64\n",
       "Standard Error                   float64\n",
       "Economy (GDP per Capita)         float64\n",
       "Family                           float64\n",
       "Health (Life Expectancy)         float64\n",
       "Freedom                          float64\n",
       "Trust (Government Corruption)    float64\n",
       "Generosity                       float64\n",
       "Dystopia Residual                float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f4ec11e",
   "metadata": {},
   "source": [
    "Checking for outliers on the int and float type of columns-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "eb4d214e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Region'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3cabab10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Happiness Rank'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "49510f3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Happiness Score'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "cfafbeb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Family'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "875bf7d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD4CAYAAAD8Zh1EAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAASCElEQVR4nO3df4xd5Z3f8feHyXQNgdpCnjYsv9xWoIyYEJKO2NDQFlfJihAquhKq8K6Wks7KBZHZsE26MjtVaFaiov+kauySAS3ZJC2d/ZWIpQE2YbeThkkLy+A1xsSJhLas4oLChGgBC7Ox3W//mOPk7jAz94597Wsfv1/S1ZzznOec87Vlfebxc597T6oKSdKp74xBFyBJ6g8DXZJawkCXpJYw0CWpJQx0SWqJdwzqxhs3bqxNmzYN6vaSdEp65plnflhVI8sdG1igb9q0ifn5+UHdXpJOSUn+YqVjTrlIUksY6JLUEga6JLWEgS5JLWGgS1JLGOhSh5mZGcbGxhgaGmJsbIyZmZlBlyT1bGDLFqWTzczMDFNTUzzwwANcffXVzM3NMTExAcCWLVsGXJ3UXQb19bnj4+PlOnSdTMbGxti+fTubN2/+Sdvs7CyTk5Ps2bNngJVJP5XkmaoaX/aYgS4tGhoa4q233mJ4ePgnbQcPHmTdunUcPnx4gJVJP7VaoDuHLjVGR0eZm5v7a21zc3OMjo4OqCJpbQx0qTE1NcXExASzs7McPHiQ2dlZJiYmmJqaGnRpUk+6vimaZB3wLeBnmv5/UFV3LelzDfCHwP9pmr5aVb/Z10ql4+zIG5+Tk5Ps3buX0dFR7r77bt8Q1Smj6xx6kgDvrKr9SYaBOeATVfVkR59rgE9V1fW93tg5dElau9Xm0LuO0Gsx8fc3u8PNyydLS9JJpqc59CRDSXYBrwCPV9VTy3S7KsmzSR5LctkK19maZD7J/MLCwtFXLUl6m54CvaoOV9UVwAXAlUnGlnTZCVxcVe8FtgMPrXCd+6tqvKrGR0aW/X52SdJRWtMql6r6S+CbwLVL2l+vqv3N9qPAcJKNfapRktSDroGeZCTJhmb7TOBDwHeX9HlX8+YpSa5srvtq36uVJK2ol+9yOQ/4UpIhFoP696rqa0luBaiqaeBG4LYkh4ADwE01qI+gStJpqpdVLruB9y3TPt2xvQPY0d/SJElr4SdFJaklDHRJagkDXZJawkCXpJYw0CWpJQx0SWoJA12SWsJAl6SWMNAlqSV6+ei/dErbtO2RE3KfF+/56Am5j7QSA12tdzRBu2nbIwa0TjlOuUhSSxjoktQSBroktYSBLkktYaBLUksY6JLUEga6JLWEgS5JLWGgS1JLGOiS1BJdAz3JuiR/muTZJM8n+cwyfZLkc0leSLI7yfuPT7mSpJX08l0ufwX8k6ran2QYmEvyWFU92dHnI8AlzevngM83PyVJJ0jXEXot2t/sDjevWtLtBuDLTd8ngQ1JzutvqZKk1fQ0h55kKMku4BXg8ap6akmX84Hvd+zva9okSSdIT4FeVYer6grgAuDKJGNLumS505Y2JNmaZD7J/MLCwpqLlSStbE2rXKrqL4FvAtcuObQPuLBj/wLgpWXOv7+qxqtqfGRkZG2VSpJW1csql5EkG5rtM4EPAd9d0u1h4OZmtcsHgNeq6uV+FytJWlkvq1zOA76UZIjFXwC/V1VfS3IrQFVNA48C1wEvAG8CHztO9UqSVtA10KtqN/C+ZdqnO7YLuL2/pUmS1sJPikpSSxjoktQSBroktYSBLkktYaBLUksY6JLUEga6JLWEgS5JLWGgS1JLGOiS1BIGuiS1hIEuSS1hoEtSSxjoktQSBroktYSBLkktYaBLUksY6JLUEga6JLWEgS5JLWGgS1JLGOiS1BJdAz3JhUlmk+xN8nySTyzT55okryXZ1bw+fXzKlSSt5B099DkEfLKqdiY5B3gmyeNV9Z0l/Z6oquv7X6IkqRddR+hV9XJV7Wy23wD2Aucf78IkSWuzpjn0JJuA9wFPLXP4qiTPJnksyWUrnL81yXyS+YWFhbVXK0laUc+BnuRs4CvAHVX1+pLDO4GLq+q9wHbgoeWuUVX3V9V4VY2PjIwcZcmSpOX0ModOkmEWw/zBqvrq0uOdAV9Vjya5N8nGqvph/0qV4L2f+QavHTh4Qu61adsjx/X6688c5tm7fv643kOnl66BniTAA8DeqvrsCn3eBfygqirJlSyO/F/ta6US8NqBg7x4z0cHXUZfHO9fGDr99DJC/yDwy8BzSXY1bb8BXARQVdPAjcBtSQ4BB4Cbqqr6X64kaSVdA72q5oB06bMD2NGvoiRJa+cnRSWpJQx0SWoJA12SWsJAl6SWMNAlqSUMdElqCQNdklrCQJekljDQJaklDHRJagkDXZJawkCXpJYw0CWpJQx0SWoJA12SWsJAl6SWMNAlqSUMdElqiV6eKSqdNM4Z3cZ7vrRt0GX0xTmjAO144LVODga6Tilv7L2HF+9pRwhu2vbIoEtQyzjlIkkt0TXQk1yYZDbJ3iTPJ/nEMn2S5HNJXkiyO8n7j0+5kqSV9DLlcgj4ZFXtTHIO8EySx6vqOx19PgJc0rx+Dvh881OSdIJ0HaFX1ctVtbPZfgPYC5y/pNsNwJdr0ZPAhiTn9b1aSdKK1jSHnmQT8D7gqSWHzge+37G/j7eHPkm2JplPMr+wsLDGUiVJq+k50JOcDXwFuKOqXl96eJlT6m0NVfdX1XhVjY+MjKytUknSqnoK9CTDLIb5g1X11WW67AMu7Ni/AHjp2MuTJPWql1UuAR4A9lbVZ1fo9jBwc7Pa5QPAa1X1ch/rlCR10csqlw8Cvww8l2RX0/YbwEUAVTUNPApcB7wAvAl8rO+VSpJW1TXQq2qO5efIO/sUcHu/ipIkrZ2fFJWkljDQJaklDHRJagkDXZJawkCXpJYw0CWpJQx0SWoJA12SWsJAl6SW8JmiOuW05Vmc688cHnQJahkDXaeUE/WA6E3bHmnNw6h1+nDKRZJawkCXpJYw0CWpJQx0SWoJA12SWsJAl6SWMNAlqSUMdElqCQNdklrCQJekluga6Em+kOSVJHtWOH5NkteS7Gpen+5/mZKkbnr5LpcvAjuAL6/S54mqur4vFUmSjkrXEXpVfQv40QmoRZJ0DPo1h35VkmeTPJbkspU6JdmaZD7J/MLCQp9uLUmC/gT6TuDiqnovsB14aKWOVXV/VY1X1fjIyEgfbi1JOuKYA72qXq+q/c32o8Bwko3HXJkkaU2OOdCTvCtJmu0rm2u+eqzXlSStTddVLklmgGuAjUn2AXcBwwBVNQ3cCNyW5BBwALipquq4VSxJWlbXQK+qLV2O72BxWaMkaYD8pKgktYSBLkktYaBLUksY6JLUEga6JLWEgS5JLWGgS1JLGOiS1BIGuiS1hIEuSS1hoEtSSxjoktQSBroktYSBLkktYaBLUksY6JLUEga6JLWEgS5JLWGgS1JLGOiS1BIGuiS1RNdAT/KFJK8k2bPC8ST5XJIXkuxO8v7+lylJ6qaXEfoXgWtXOf4R4JLmtRX4/LGXJUlaq66BXlXfAn60SpcbgC/XoieBDUnO61eBkqTe9GMO/Xzg+x37+5q2t0myNcl8kvmFhYU+3FqSdEQ/Aj3LtNVyHavq/qoar6rxkZGRPtxaknREPwJ9H3Bhx/4FwEt9uK4kaQ36EegPAzc3q10+ALxWVS/34bqSpDV4R7cOSWaAa4CNSfYBdwHDAFU1DTwKXAe8ALwJfOx4FStJWlnXQK+qLV2OF3B73yqSJB2VroEuneo2bXvkhJz34j0fPar7SP1ioKv1DFqdLvwuF0lqCQNdklrCQJekljDQJaklDHRJagkDXZJawkCXpJYw0CWpJQx0SWoJA13qMDk5ybp160jCunXrmJycHHRJUs8MdKkxOTnJvffey4YNGwDYsGED9957r6GuU4aBLjWmp6dZv349MzMz/PjHP2ZmZob169czPT096NKknhjoUuPQoUM8+OCDbN68meHhYTZv3syDDz7IoUOHBl2a1BMDXeqwZ8+eVfelk5lfnys1zj33XO68806Ghoa49dZbmZ6e5s477+Tcc88ddGlSTxyhS40dO3Zw1llnsW3bNt75zneybds2zjrrLHbs2DHo0qSeGOhSY8uWLdx3331ceumlnHHGGVx66aXcd999bNmy6lMYpZNGFh8JeuKNj4/X/Pz8QO4tSaeqJM9U1fhyxxyhS1JL9BToSa5N8r0kLyTZtszxa5K8lmRX8/p0/0uVJK2m6yqXJEPAfwY+DOwDnk7ycFV9Z0nXJ6rq+uNQoySpB72M0K8EXqiqP6+qHwO/A9xwfMuSJK1VL4F+PvD9jv19TdtSVyV5NsljSS7rS3WSpJ718sGiLNO2dGnMTuDiqtqf5DrgIeCSt10o2QpsBbjooovWVqkkaVW9jND3ARd27F8AvNTZoaper6r9zfajwHCSjUsvVFX3V9V4VY2PjIwcQ9mSpKV6CfSngUuS/J0kfwO4CXi4s0OSdyVJs31lc91X+12sJGllXadcqupQko8DXweGgC9U1fNJbm2OTwM3ArclOQQcAG6qQX1iSZJOU35SVJJOIX5SVJJOAwa6JLWEgS51mJmZYWxsjKGhIcbGxpiZmRl0SVLPfMCF1JiZmWFqaooHHniAq6++mrm5OSYmJgD8Cl2dEnxTVGqMjY2xfft2Nm/e/JO22dlZJicnfRSdThqrvSlqoEuNoaEh3nrrLYaHh3/SdvDgQdatW8fhw4cHWJn0U65ykXowOjrK3NzcX2ubm5tjdHR0QBVJa2OgS42pqSkmJiaYnZ3l4MGDzM7OMjExwdTU1KBLk3rim6JS48gbn5OTk+zdu5fR0VHuvvtu3xDVKcM5dEk6hTiHLkmnAQNdklrCQJekljDQJaklDHRJaomBrXJJsgD8xUBuLnW3EfjhoIuQlnFxVS37DM+BBbp0Mksyv9LSMOlk5ZSLJLWEgS5JLWGgS8u7f9AFSGvlHLoktYQjdElqCQNdklrCQNcJkeRwkl1Jnk/ybJJ/nWTN//6SbEryi8dYy/9aY/8XkzyXZHeS/5nk4qO4588m+YMVjn0zyVEtkUxyS5IdR3Ou2sdA14lyoKquqKrLgA8D1wF3HcV1NgHHFOhV9Q+O4rTNVXU58E3g3x7FPV+qqhuP4r5Szwx0nXBV9QqwFfh4Fj2R5Iojx5N8O8nlSf5xM6rfleTPkpwD3AP8w6bt15KsS/LbzQj6z5Jsbq5xS5I/TPJHSb6X5K6O6+9vfp6d5E+S7GzOv6GH8v83cH5z/kiSryR5unl9sGl/W93N/yz2NMfPTPI7zYj/d4Ezl9bWbN+Y5IvN9j9N8lRzvT9O8reP6i9freYTizQQVfXnzZTL3wJ+C7gFuCPJpcDPVNXuJP8duL2qvp3kbOAtYBvwqaq6HiDJJ5vrvSfJu4FvNNcAuBIYA94Enk7ySFV1PlXlLeAXqur1JBuBJ5M8XKsv/boWeKjZ/k/Af6yquSQXAV8HRoFPLVN3p9uAN6vq8iSXAzt7+CubAz5QVZXkV4BfBz7Zw3k6jThC1yCl+fn7wPVJhoF/CXyxaf828NkkvwpsqKpDy1zjauC/AFTVd1n8fqAjgf54Vb1aVQeArzZ9l97/3yfZDfwxiyPvlUa+s0leAT4E/Lem7UPAjiS7gIeBv9n8L6Jb3f8I+K9NzbuB3Svcs9MFwNeTPAf8G+CyHs7RacZA10Ak+bvAYeCVqnoTeBy4AfjnNIFZVfcAv8LilMSTzQj8bZda5TZLR9pL938JGAH+flVdAfwAWLfCtTYDFwPPA7/ZtJ0BXNW8N3BFVZ1fVW/0WPdK/wvobO+sZTuwo6reA/yrVerUacxA1wmXZASYZjGgjgTYbwGfA56uqh81/f5eVT1XVf8BmAfeDbwBnNNxuW+xGMw0Uy0XAd9rjn04yblJzgT+GYsj507rWfyFcrCZe1919Uoz0r8DuDnJucA3gI93/LmuWKXuTp01jwGXdxz7QZLRZjrqF5bU+n+b7X+xWp06fRnoOlHOPLJskcXpjW8AnzlysKqeAV4HfrvjnDuS7EnyLHAAeIzF6YlDzdLHXwPuBYaaqYjfBW6pqr9qzp9jcTpmF/CVJfPnAA8C40nmWQzY73b7Q1TVy8AMcDvwq835u5N8B7h1lbo7fR44u5nq+XXgTzuObQO+BvwP4OWO9n8H/H6SJ/BrfbUCP/qvk0KSn2VxSeC7q+r/9eF6twDjVfXxbn2ltnCEroFLcjPwFDDVjzCXTleO0CWpJRyhS1JLGOiS1BIGuiS1hIEuSS1hoEtSS/x/mnw+AlWIxIsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Dystopia Residual'].plot.box()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e39f1a0",
   "metadata": {},
   "source": [
    "Considering the outlier removal-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "d050aa60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(158, 12)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "167cff59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 27,  40,  64, 115, 128, 147, 153, 155, 157]),\n",
       " array([ 9,  4,  4,  4, 10,  6,  9, 11,  6]))"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from scipy.stats import zscore\n",
    "z=np.abs(zscore(df))\n",
    "threshold=3\n",
    "np.where(z>3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "3bb2ca8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Region</th>\n",
       "      <th>Happiness Rank</th>\n",
       "      <th>Happiness Score</th>\n",
       "      <th>Standard Error</th>\n",
       "      <th>Economy (GDP per Capita)</th>\n",
       "      <th>Family</th>\n",
       "      <th>Health (Life Expectancy)</th>\n",
       "      <th>Freedom</th>\n",
       "      <th>Trust (Government Corruption)</th>\n",
       "      <th>Generosity</th>\n",
       "      <th>Dystopia Residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.587</td>\n",
       "      <td>0.03411</td>\n",
       "      <td>1.39651</td>\n",
       "      <td>1.34951</td>\n",
       "      <td>0.94143</td>\n",
       "      <td>0.66557</td>\n",
       "      <td>0.41978</td>\n",
       "      <td>0.29678</td>\n",
       "      <td>2.51738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>58.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2</td>\n",
       "      <td>7.561</td>\n",
       "      <td>0.04884</td>\n",
       "      <td>1.30232</td>\n",
       "      <td>1.40223</td>\n",
       "      <td>0.94784</td>\n",
       "      <td>0.62877</td>\n",
       "      <td>0.14145</td>\n",
       "      <td>0.43630</td>\n",
       "      <td>2.70201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>3</td>\n",
       "      <td>7.527</td>\n",
       "      <td>0.03328</td>\n",
       "      <td>1.32548</td>\n",
       "      <td>1.36058</td>\n",
       "      <td>0.87464</td>\n",
       "      <td>0.64938</td>\n",
       "      <td>0.48357</td>\n",
       "      <td>0.34139</td>\n",
       "      <td>2.49204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>105.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4</td>\n",
       "      <td>7.522</td>\n",
       "      <td>0.03880</td>\n",
       "      <td>1.45900</td>\n",
       "      <td>1.33095</td>\n",
       "      <td>0.88521</td>\n",
       "      <td>0.66973</td>\n",
       "      <td>0.36503</td>\n",
       "      <td>0.34699</td>\n",
       "      <td>2.46531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5</td>\n",
       "      <td>7.427</td>\n",
       "      <td>0.03553</td>\n",
       "      <td>1.32629</td>\n",
       "      <td>1.32261</td>\n",
       "      <td>0.90563</td>\n",
       "      <td>0.63297</td>\n",
       "      <td>0.32957</td>\n",
       "      <td>0.45811</td>\n",
       "      <td>2.45176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>66.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>151</td>\n",
       "      <td>3.655</td>\n",
       "      <td>0.05141</td>\n",
       "      <td>0.46534</td>\n",
       "      <td>0.77115</td>\n",
       "      <td>0.15185</td>\n",
       "      <td>0.46866</td>\n",
       "      <td>0.17922</td>\n",
       "      <td>0.20165</td>\n",
       "      <td>1.41723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>20.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>152</td>\n",
       "      <td>3.587</td>\n",
       "      <td>0.04324</td>\n",
       "      <td>0.25812</td>\n",
       "      <td>0.85188</td>\n",
       "      <td>0.27125</td>\n",
       "      <td>0.39493</td>\n",
       "      <td>0.12832</td>\n",
       "      <td>0.21747</td>\n",
       "      <td>1.46494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>153</td>\n",
       "      <td>3.575</td>\n",
       "      <td>0.03084</td>\n",
       "      <td>0.31982</td>\n",
       "      <td>0.30285</td>\n",
       "      <td>0.30335</td>\n",
       "      <td>0.23414</td>\n",
       "      <td>0.09719</td>\n",
       "      <td>0.36510</td>\n",
       "      <td>1.95210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>155</td>\n",
       "      <td>3.340</td>\n",
       "      <td>0.03656</td>\n",
       "      <td>0.28665</td>\n",
       "      <td>0.35386</td>\n",
       "      <td>0.31910</td>\n",
       "      <td>0.48450</td>\n",
       "      <td>0.08010</td>\n",
       "      <td>0.18260</td>\n",
       "      <td>1.63328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>21.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>157</td>\n",
       "      <td>2.905</td>\n",
       "      <td>0.08658</td>\n",
       "      <td>0.01530</td>\n",
       "      <td>0.41587</td>\n",
       "      <td>0.22396</td>\n",
       "      <td>0.11850</td>\n",
       "      <td>0.10062</td>\n",
       "      <td>0.19727</td>\n",
       "      <td>1.83302</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Country  Region  Happiness Rank  Happiness Score  Standard Error  \\\n",
       "0      135.0     9.0               1            7.587         0.03411   \n",
       "1       58.0     9.0               2            7.561         0.04884   \n",
       "2       37.0     9.0               3            7.527         0.03328   \n",
       "3      105.0     9.0               4            7.522         0.03880   \n",
       "4       24.0     5.0               5            7.427         0.03553   \n",
       "..       ...     ...             ...              ...             ...   \n",
       "150     66.0     8.0             151            3.655         0.05141   \n",
       "151     20.0     8.0             152            3.587         0.04324   \n",
       "152      0.0     7.0             153            3.575         0.03084   \n",
       "154     13.0     8.0             155            3.340         0.03656   \n",
       "156     21.0     8.0             157            2.905         0.08658   \n",
       "\n",
       "     Economy (GDP per Capita)   Family  Health (Life Expectancy)  Freedom  \\\n",
       "0                     1.39651  1.34951                   0.94143  0.66557   \n",
       "1                     1.30232  1.40223                   0.94784  0.62877   \n",
       "2                     1.32548  1.36058                   0.87464  0.64938   \n",
       "3                     1.45900  1.33095                   0.88521  0.66973   \n",
       "4                     1.32629  1.32261                   0.90563  0.63297   \n",
       "..                        ...      ...                       ...      ...   \n",
       "150                   0.46534  0.77115                   0.15185  0.46866   \n",
       "151                   0.25812  0.85188                   0.27125  0.39493   \n",
       "152                   0.31982  0.30285                   0.30335  0.23414   \n",
       "154                   0.28665  0.35386                   0.31910  0.48450   \n",
       "156                   0.01530  0.41587                   0.22396  0.11850   \n",
       "\n",
       "     Trust (Government Corruption)  Generosity  Dystopia Residual  \n",
       "0                          0.41978     0.29678            2.51738  \n",
       "1                          0.14145     0.43630            2.70201  \n",
       "2                          0.48357     0.34139            2.49204  \n",
       "3                          0.36503     0.34699            2.46531  \n",
       "4                          0.32957     0.45811            2.45176  \n",
       "..                             ...         ...                ...  \n",
       "150                        0.17922     0.20165            1.41723  \n",
       "151                        0.12832     0.21747            1.46494  \n",
       "152                        0.09719     0.36510            1.95210  \n",
       "154                        0.08010     0.18260            1.63328  \n",
       "156                        0.10062     0.19727            1.83302  \n",
       "\n",
       "[149 rows x 12 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new_z=df[(z<3).all(axis=1)]\n",
    "df_new_z"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1eeadfd",
   "metadata": {},
   "source": [
    "Percentage of data loss-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f17bf101",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.69620253164557"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_loss=((158-149)/158)*100\n",
    "data_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16b2ef97",
   "metadata": {},
   "source": [
    "Separating the columns into features and target-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "3b8e2e7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "features=df.drop('Happiness Score',axis=1)\n",
    "target=df['Happiness Score']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9e235fd",
   "metadata": {},
   "source": [
    "Scaling the data using MinMax scaler-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "9c337c54",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "mns=MinMaxScaler()\n",
    "from sklearn.linear_model import LinearRegression\n",
    "lr=LinearRegression()\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "91d30c3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "870ff9e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At random state 0,the training accuracy is:- 0.9999999444138908\n",
      "At random state 0,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 1,the training accuracy is:- 0.9999999444138908\n",
      "At random state 1,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 2,the training accuracy is:- 0.9999999444138908\n",
      "At random state 2,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 3,the training accuracy is:- 0.9999999444138908\n",
      "At random state 3,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 4,the training accuracy is:- 0.9999999444138908\n",
      "At random state 4,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 5,the training accuracy is:- 0.9999999444138908\n",
      "At random state 5,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 6,the training accuracy is:- 0.9999999444138908\n",
      "At random state 6,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 7,the training accuracy is:- 0.9999999444138908\n",
      "At random state 7,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 8,the training accuracy is:- 0.9999999444138908\n",
      "At random state 8,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 9,the training accuracy is:- 0.9999999444138908\n",
      "At random state 9,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 10,the training accuracy is:- 0.9999999444138908\n",
      "At random state 10,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 11,the training accuracy is:- 0.9999999444138908\n",
      "At random state 11,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 12,the training accuracy is:- 0.9999999444138908\n",
      "At random state 12,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 13,the training accuracy is:- 0.9999999444138908\n",
      "At random state 13,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 14,the training accuracy is:- 0.9999999444138908\n",
      "At random state 14,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 15,the training accuracy is:- 0.9999999444138908\n",
      "At random state 15,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 16,the training accuracy is:- 0.9999999444138908\n",
      "At random state 16,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 17,the training accuracy is:- 0.9999999444138908\n",
      "At random state 17,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 18,the training accuracy is:- 0.9999999444138908\n",
      "At random state 18,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 19,the training accuracy is:- 0.9999999444138908\n",
      "At random state 19,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 20,the training accuracy is:- 0.9999999444138908\n",
      "At random state 20,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 21,the training accuracy is:- 0.9999999444138908\n",
      "At random state 21,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 22,the training accuracy is:- 0.9999999444138908\n",
      "At random state 22,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 23,the training accuracy is:- 0.9999999444138908\n",
      "At random state 23,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 24,the training accuracy is:- 0.9999999444138908\n",
      "At random state 24,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 25,the training accuracy is:- 0.9999999444138908\n",
      "At random state 25,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 26,the training accuracy is:- 0.9999999444138908\n",
      "At random state 26,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 27,the training accuracy is:- 0.9999999444138908\n",
      "At random state 27,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 28,the training accuracy is:- 0.9999999444138908\n",
      "At random state 28,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 29,the training accuracy is:- 0.9999999444138908\n",
      "At random state 29,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 30,the training accuracy is:- 0.9999999444138908\n",
      "At random state 30,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 31,the training accuracy is:- 0.9999999444138908\n",
      "At random state 31,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 32,the training accuracy is:- 0.9999999444138908\n",
      "At random state 32,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 33,the training accuracy is:- 0.9999999444138908\n",
      "At random state 33,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 34,the training accuracy is:- 0.9999999444138908\n",
      "At random state 34,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 35,the training accuracy is:- 0.9999999444138908\n",
      "At random state 35,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 36,the training accuracy is:- 0.9999999444138908\n",
      "At random state 36,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 37,the training accuracy is:- 0.9999999444138908\n",
      "At random state 37,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 38,the training accuracy is:- 0.9999999444138908\n",
      "At random state 38,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 39,the training accuracy is:- 0.9999999444138908\n",
      "At random state 39,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 40,the training accuracy is:- 0.9999999444138908\n",
      "At random state 40,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 41,the training accuracy is:- 0.9999999444138908\n",
      "At random state 41,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 42,the training accuracy is:- 0.9999999444138908\n",
      "At random state 42,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 43,the training accuracy is:- 0.9999999444138908\n",
      "At random state 43,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 44,the training accuracy is:- 0.9999999444138908\n",
      "At random state 44,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 45,the training accuracy is:- 0.9999999444138908\n",
      "At random state 45,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 46,the training accuracy is:- 0.9999999444138908\n",
      "At random state 46,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 47,the training accuracy is:- 0.9999999444138908\n",
      "At random state 47,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 48,the training accuracy is:- 0.9999999444138908\n",
      "At random state 48,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 49,the training accuracy is:- 0.9999999444138908\n",
      "At random state 49,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 50,the training accuracy is:- 0.9999999444138908\n",
      "At random state 50,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 51,the training accuracy is:- 0.9999999444138908\n",
      "At random state 51,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 52,the training accuracy is:- 0.9999999444138908\n",
      "At random state 52,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 53,the training accuracy is:- 0.9999999444138908\n",
      "At random state 53,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 54,the training accuracy is:- 0.9999999444138908\n",
      "At random state 54,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 55,the training accuracy is:- 0.9999999444138908\n",
      "At random state 55,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 56,the training accuracy is:- 0.9999999444138908\n",
      "At random state 56,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 57,the training accuracy is:- 0.9999999444138908\n",
      "At random state 57,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 58,the training accuracy is:- 0.9999999444138908\n",
      "At random state 58,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 59,the training accuracy is:- 0.9999999444138908\n",
      "At random state 59,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 60,the training accuracy is:- 0.9999999444138908\n",
      "At random state 60,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 61,the training accuracy is:- 0.9999999444138908\n",
      "At random state 61,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 62,the training accuracy is:- 0.9999999444138908\n",
      "At random state 62,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 63,the training accuracy is:- 0.9999999444138908\n",
      "At random state 63,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 64,the training accuracy is:- 0.9999999444138908\n",
      "At random state 64,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 65,the training accuracy is:- 0.9999999444138908\n",
      "At random state 65,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 66,the training accuracy is:- 0.9999999444138908\n",
      "At random state 66,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 67,the training accuracy is:- 0.9999999444138908\n",
      "At random state 67,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 68,the training accuracy is:- 0.9999999444138908\n",
      "At random state 68,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 69,the training accuracy is:- 0.9999999444138908\n",
      "At random state 69,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 70,the training accuracy is:- 0.9999999444138908\n",
      "At random state 70,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 71,the training accuracy is:- 0.9999999444138908\n",
      "At random state 71,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 72,the training accuracy is:- 0.9999999444138908\n",
      "At random state 72,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 73,the training accuracy is:- 0.9999999444138908\n",
      "At random state 73,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 74,the training accuracy is:- 0.9999999444138908\n",
      "At random state 74,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 75,the training accuracy is:- 0.9999999444138908\n",
      "At random state 75,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 76,the training accuracy is:- 0.9999999444138908\n",
      "At random state 76,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 77,the training accuracy is:- 0.9999999444138908\n",
      "At random state 77,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 78,the training accuracy is:- 0.9999999444138908\n",
      "At random state 78,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 79,the training accuracy is:- 0.9999999444138908\n",
      "At random state 79,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 80,the training accuracy is:- 0.9999999444138908\n",
      "At random state 80,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 81,the training accuracy is:- 0.9999999444138908\n",
      "At random state 81,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 82,the training accuracy is:- 0.9999999444138908\n",
      "At random state 82,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 83,the training accuracy is:- 0.9999999444138908\n",
      "At random state 83,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 84,the training accuracy is:- 0.9999999444138908\n",
      "At random state 84,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 85,the training accuracy is:- 0.9999999444138908\n",
      "At random state 85,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 86,the training accuracy is:- 0.9999999444138908\n",
      "At random state 86,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 87,the training accuracy is:- 0.9999999444138908\n",
      "At random state 87,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 88,the training accuracy is:- 0.9999999444138908\n",
      "At random state 88,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 89,the training accuracy is:- 0.9999999444138908\n",
      "At random state 89,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 90,the training accuracy is:- 0.9999999444138908\n",
      "At random state 90,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 91,the training accuracy is:- 0.9999999444138908\n",
      "At random state 91,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 92,the training accuracy is:- 0.9999999444138908\n",
      "At random state 92,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 93,the training accuracy is:- 0.9999999444138908\n",
      "At random state 93,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 94,the training accuracy is:- 0.9999999444138908\n",
      "At random state 94,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 95,the training accuracy is:- 0.9999999444138908\n",
      "At random state 95,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 96,the training accuracy is:- 0.9999999444138908\n",
      "At random state 96,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 97,the training accuracy is:- 0.9999999444138908\n",
      "At random state 97,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 98,the training accuracy is:- 0.9999999444138908\n",
      "At random state 98,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n",
      "At random state 99,the training accuracy is:- 0.9999999444138908\n",
      "At random state 99,the testing accuracy is:- 0.9999999394454414\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in range(0,100):\n",
    "    features_train,features_test,target_train,target_test=train_test_split(features,target,test_size=0.2,random_state=1)\n",
    "    lr.fit(features_train,target_train)\n",
    "    pred_train=lr.predict(features_train)\n",
    "    pred_test=lr.predict(features_test)\n",
    "    print(f'At random state {i},the training accuracy is:- {r2_score(target_train,pred_train)}')\n",
    "    print(f'At random state {i},the testing accuracy is:- {r2_score(target_test,pred_test)}')\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "153325a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "features_train,features_test,target_train,target_test=train_test_split(features,target,test_size=0.2,random_state=12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "fdd32122",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(features_train,target_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "98c19dcd",
   "metadata": {},
   "outputs": [],
   "source": [
    "pred_test=lr.predict(features_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "237efb9f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9999999439158268\n"
     ]
    }
   ],
   "source": [
    "print(r2_score(target_test,pred_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c52558fd",
   "metadata": {},
   "source": [
    "Cross validation of the model-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9acd9e7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At cross fold 2 the cv score is 0.9999997284501867 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 3 the cv score is 0.9999994758122854 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 4 the cv score is 0.9999988371717737 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 5 the cv score is 0.9999982417917263 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 6 the cv score is 0.9999971509064253 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 7 the cv score is 0.99999580182807 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 8 the cv score is 0.9999955494387556 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n",
      "At cross fold 9 the cv score is 0.9999935863400461 and accuracy score for training is -1.105299351219235 and accuracy for the testing is 0.9999999439158268\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "Train_accuracy=r2_score(target_train,pred_train)\n",
    "Test_accuracy=r2_score(target_test,pred_test)\n",
    "from sklearn.model_selection import cross_val_score\n",
    "for j in range(2,10):\n",
    "    cv_score=cross_val_score(lr,features,target,cv=j)\n",
    "    cv_mean=cv_score.mean()\n",
    "    print(f'At cross fold {j} the cv score is {cv_mean} and accuracy score for training is {Train_accuracy} and accuracy for the testing is {Test_accuracy}')\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "68f2486f",
   "metadata": {},
   "source": [
    "Here, we have handled the problem of the overfitting and the underfitting by checking the training and testing score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "7e459284",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(x=target_test,y=pred_test,color='r')\n",
    "plt.plot(target_test,target_test,color='b')\n",
    "plt.xlabel('Actual charges',fontsize=14)\n",
    "plt.ylabel('Predicted charges',fontsize=14)\n",
    "plt.title('Linear Regression',fontsize=14)\n",
    "plt.savefig('lr.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f3309cc",
   "metadata": {},
   "source": [
    "Best fit line is covering most of the datapoints which shows good fit of our model.\n",
    "Equation of the line is: y=mx+c"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5650c017",
   "metadata": {},
   "source": [
    "Regularization-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "460eda14",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'alpha': 0.0001, 'random_state': 0}\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import Lasso\n",
    "parameters={'alpha': [.0001, .001, .01, .1, 1, 10],\n",
    "           'random_state':list(range(0,10))}\n",
    "ls=Lasso()\n",
    "clf= GridSearchCV(ls,parameters)\n",
    "clf.fit(features_train,target_train)\n",
    "print(clf.best_params_)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62202dde",
   "metadata": {},
   "source": [
    "Final model training-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f8beb042",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99.99805570775266"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ls=Lasso(alpha=0.0001,random_state=0)\n",
    "ls.fit(features_train,target_train)\n",
    "ls_score_training=ls.score(features_train,target_train)\n",
    "pred_ls=ls.predict(features_test)\n",
    "ls_score_training*100"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "524cb6e9",
   "metadata": {},
   "source": [
    "Ensemble technique-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "2682a62a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.ensemble import RandomForestRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "c3456ef0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'criterion': 'mse', 'max_features': 'auto'}\n"
     ]
    }
   ],
   "source": [
    "parameters={'criterion': ['mse','mae'],\n",
    "           'max_features':['auto','sqrt','log2']}\n",
    "rf=RandomForestRegressor()\n",
    "clf= GridSearchCV(rf,parameters)\n",
    "clf.fit(features_train,target_train)\n",
    "print(clf.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "d2a12cfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "7156bea0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score: 96.7588489936646\n",
      "Cross val score: -289.2856660725974\n"
     ]
    }
   ],
   "source": [
    "rf=RandomForestRegressor(criterion='mae',max_features='sqrt')\n",
    "rf.fit(features_train,target_train)\n",
    "rf.score(features_train,target_train)\n",
    "pred_decision= rf.predict(features_test)\n",
    "rfs=r2_score(target_test,pred_decision)\n",
    "print('R2 Score:',rfs*100)\n",
    "rfscore=cross_val_score(rf,features,target,cv=5)\n",
    "rfc= rfscore.mean()\n",
    "print('Cross val score:',rfc*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3edb7b13",
   "metadata": {},
   "source": [
    "We are getting model accuracy and cross validation both above 96% which shows our model is performing very good."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2142666c",
   "metadata": {},
   "source": [
    "Saving the file-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "7e0b2804",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "filename='score.pkl'\n",
    "pickle.dump(rf, open(filename, 'wb'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78b98107",
   "metadata": {},
   "source": [
    "Conclusion-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "e611f2bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "96.7588489936646\n"
     ]
    }
   ],
   "source": [
    "loaded_model=pickle.load(open('score.pkl','rb'))\n",
    "result=loaded_model.score(features_test,target_test)\n",
    "print(result*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "10264a60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "      <th>26</th>\n",
       "      <th>27</th>\n",
       "      <th>28</th>\n",
       "      <th>29</th>\n",
       "      <th>30</th>\n",
       "      <th>31</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Predicted</th>\n",
       "      <td>5.22724</td>\n",
       "      <td>4.483295</td>\n",
       "      <td>6.07423</td>\n",
       "      <td>4.04553</td>\n",
       "      <td>6.5243</td>\n",
       "      <td>6.4686</td>\n",
       "      <td>3.94827</td>\n",
       "      <td>4.26615</td>\n",
       "      <td>5.08725</td>\n",
       "      <td>4.730875</td>\n",
       "      <td>...</td>\n",
       "      <td>5.64942</td>\n",
       "      <td>6.18972</td>\n",
       "      <td>7.29358</td>\n",
       "      <td>7.21646</td>\n",
       "      <td>5.73088</td>\n",
       "      <td>7.08808</td>\n",
       "      <td>3.81716</td>\n",
       "      <td>4.80555</td>\n",
       "      <td>5.88115</td>\n",
       "      <td>6.86056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Original</th>\n",
       "      <td>5.22724</td>\n",
       "      <td>4.483295</td>\n",
       "      <td>6.07423</td>\n",
       "      <td>4.04553</td>\n",
       "      <td>6.5243</td>\n",
       "      <td>6.4686</td>\n",
       "      <td>3.94827</td>\n",
       "      <td>4.26615</td>\n",
       "      <td>5.08725</td>\n",
       "      <td>4.730875</td>\n",
       "      <td>...</td>\n",
       "      <td>5.64942</td>\n",
       "      <td>6.18972</td>\n",
       "      <td>7.29358</td>\n",
       "      <td>7.21646</td>\n",
       "      <td>5.73088</td>\n",
       "      <td>7.08808</td>\n",
       "      <td>3.81716</td>\n",
       "      <td>4.80555</td>\n",
       "      <td>5.88115</td>\n",
       "      <td>6.86056</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                0         1        2        3       4       5        6   \\\n",
       "Predicted  5.22724  4.483295  6.07423  4.04553  6.5243  6.4686  3.94827   \n",
       "Original   5.22724  4.483295  6.07423  4.04553  6.5243  6.4686  3.94827   \n",
       "\n",
       "                7        8         9   ...       22       23       24  \\\n",
       "Predicted  4.26615  5.08725  4.730875  ...  5.64942  6.18972  7.29358   \n",
       "Original   4.26615  5.08725  4.730875  ...  5.64942  6.18972  7.29358   \n",
       "\n",
       "                25       26       27       28       29       30       31  \n",
       "Predicted  7.21646  5.73088  7.08808  3.81716  4.80555  5.88115  6.86056  \n",
       "Original   7.21646  5.73088  7.08808  3.81716  4.80555  5.88115  6.86056  \n",
       "\n",
       "[2 rows x 32 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conclusion=pd.DataFrame([loaded_model.predict(features_test)[:],pred_decision[:]],index=['Predicted','Original'])\n",
    "conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b50526de",
   "metadata": {},
   "source": [
    "THE END"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b3407bcb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
